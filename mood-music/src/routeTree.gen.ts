/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './routes/__root'
import { Route as TracksRouteImport } from './routes/tracks'
import { Route as MoodRouteImport } from './routes/mood'
import { Route as LikesRouteImport } from './routes/likes'
import { Route as AboutRouteImport } from './routes/about'
import { Route as IndexRouteImport } from './routes/index'

const TracksRoute = TracksRouteImport.update({
  id: '/tracks',
  path: '/tracks',
  getParentRoute: () => rootRouteImport,
} as any)
const MoodRoute = MoodRouteImport.update({
  id: '/mood',
  path: '/mood',
  getParentRoute: () => rootRouteImport,
} as any)
const LikesRoute = LikesRouteImport.update({
  id: '/likes',
  path: '/likes',
  getParentRoute: () => rootRouteImport,
} as any)
const AboutRoute = AboutRouteImport.update({
  id: '/about',
  path: '/about',
  getParentRoute: () => rootRouteImport,
} as any)
const IndexRoute = IndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRouteImport,
} as any)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/about': typeof AboutRoute
  '/likes': typeof LikesRoute
  '/mood': typeof MoodRoute
  '/tracks': typeof TracksRoute
}
export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/about': typeof AboutRoute
  '/likes': typeof LikesRoute
  '/mood': typeof MoodRoute
  '/tracks': typeof TracksRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/': typeof IndexRoute
  '/about': typeof AboutRoute
  '/likes': typeof LikesRoute
  '/mood': typeof MoodRoute
  '/tracks': typeof TracksRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths: '/' | '/about' | '/likes' | '/mood' | '/tracks'
  fileRoutesByTo: FileRoutesByTo
  to: '/' | '/about' | '/likes' | '/mood' | '/tracks'
  id: '__root__' | '/' | '/about' | '/likes' | '/mood' | '/tracks'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  AboutRoute: typeof AboutRoute
  LikesRoute: typeof LikesRoute
  MoodRoute: typeof MoodRoute
  TracksRoute: typeof TracksRoute
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/tracks': {
      id: '/tracks'
      path: '/tracks'
      fullPath: '/tracks'
      preLoaderRoute: typeof TracksRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/mood': {
      id: '/mood'
      path: '/mood'
      fullPath: '/mood'
      preLoaderRoute: typeof MoodRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/likes': {
      id: '/likes'
      path: '/likes'
      fullPath: '/likes'
      preLoaderRoute: typeof LikesRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/about': {
      id: '/about'
      path: '/about'
      fullPath: '/about'
      preLoaderRoute: typeof AboutRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexRouteImport
      parentRoute: typeof rootRouteImport
    }
  }
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  AboutRoute: AboutRoute,
  LikesRoute: LikesRoute,
  MoodRoute: MoodRoute,
  TracksRoute: TracksRoute,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
